#!/usr/bin/env python3

import argparse
import sys


def process_stream(input_stream):
    byte_count = 0
    line_count = 0
    word_count = 0
    char_count = 0
    for line in input_stream:
        byte_count += len(line)
        char_count += len(line.decode())
        word_count += len(line.split())
        line_count += 1


    return {
        "byte_count": byte_count,
        "line_count": line_count,
        "word_count": word_count,
        "char_count": char_count, 
    }


def main():
    parser = argparse.ArgumentParser(description="WC in python!")

    parser.add_argument("filename", nargs="?", help="filename to check")
    parser.add_argument("-c", "--count", action="store_true", help="byte count in file")
    parser.add_argument(
        "-l", "--length", action="store_true", help="line count in file"
    )
    parser.add_argument("-w", "--word", action="store_true", help="word count in file")
    parser.add_argument(
        "-m", "--match_character", action="store_true", help="character count in file"
    )

    args = parser.parse_args()

    counts = {}

    if args.filename:
        try:
            with open(args.filename, "rb") as f:
                counts = process_stream(f)

        except FileNotFoundError:
            print(f"Error: File not found '{args.filename}'")
    else:
        counts = process_stream(sys.stdin.buffer)

    output_parts = []

    # Check if we are in the default case (no flags provided).
    is_default_case = not any(
        [args.count, args.length, args.word, args.match_character]
    )

    if is_default_case:
        # The standard `wc` default is lines, words, bytes.
        output_parts.append(counts["line_count"])
        output_parts.append(counts["word_count"])
        output_parts.append(counts["byte_count"])
    else:
        if args.length:
            output_parts.append(counts["line_count"])
        if args.word:
            output_parts.append(counts["word_count"])
        if args.match_character:
            output_parts.append(counts["char_count"])
        if args.count:
            output_parts.append(counts["byte_count"])

    for i in output_parts:
        print(i, end="\t")
    print(args.filename) if args.filename else print("")


if __name__ == "__main__":
    main()
